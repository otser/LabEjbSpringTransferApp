<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.softexploration.lab.ejbspring</groupId>
	<artifactId>transfer.build</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>transfer.build</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring.version>3.2.2.RELEASE</spring.version>
	</properties>
	
	
	<profiles>
		<profile>
			<id>release</id>
			<build>				
			</build>
		</profile>
	</profiles>
		
	

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		
		<!-- <dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-install-plugin</artifactId>
			<version>2.5.2</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>2.17</version>
		</dependency> -->
		
		<dependency>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-jar-plugin</artifactId>
	<version>2.3.2</version>
</dependency>
		
		
		
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.softexploration.lab.ejbspring</groupId>
				<artifactId>transfer.app</artifactId>
				<version>0.0.2-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.softexploration.lab.ejbspring</groupId>
				<artifactId>transfer.facade.ejb</artifactId>
				<type>ejb</type>
				<version>0.0.2-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.softexploration.lab.ejbspring</groupId>
				<artifactId>transfer.facade.spring</artifactId>
				<version>0.0.2-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.softexploration.lab.ejbspring</groupId>
				<artifactId>transfer.service.ejb</artifactId>
				<type>ejb</type>
				<version>0.0.2-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.softexploration.lab.ejbspring</groupId>
				<artifactId>transfer.service.spring</artifactId>
				<version>0.0.2-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.softexploration.lab.ejbspring</groupId>
				<artifactId>transfer.facade</artifactId>
				<version>0.0.2-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.softexploration.lab.ejbspring</groupId>
				<artifactId>transfer.service</artifactId>
				<version>0.0.2-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.softexploration.lab.ejbspring</groupId>
				<artifactId>transfer.webapp</artifactId>
				<type>war</type>
				<version>0.0.2-SNAPSHOT</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>transfer.app</module>
		<module>transfer.facade.ejb</module>
		<module>transfer.facade.spring</module>
		<module>transfer.facade</module>
		<module>transfer.service.ejb</module>
		<module>transfer.service.spring</module>
		<module>transfer.service</module>
		<module>transfer.webapp</module>
	</modules>
	
	<build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>

<!-- ============================================= Debut =================================================== -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.1</version>
				<!-- <version>2.2.2</version> -->
				<dependencies>
			        <dependency>
			            <groupId>org.apache.maven.plugins</groupId>
			            <artifactId>maven-scm-plugin</artifactId>
			             <version>1.9.2	</version> 
			           	<!--  <version>1.8.1</version>  -->
			        </dependency>			       
			    </dependencies>
    
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>perform</goal>
						</goals>
						<configuration>							
						<!-- The <tagBase> directory in SVN, you must define it if you don't use the standard svn layout (trunk/tags/branches). -->
						
						<!-- <generateReleasePoms> Deprecated, use : release:prepare-with-pom -->
						<!-- <preparationGoals> : Goals to run as part of the preparation step, after transformation but before committing -->
						<!-- <completionGoals> : Goals to run on completion of the preparation step, after transformation back to the next development version but before committing. Example :  clean install -Dmaven.test.skip=true  -->
						<preparationGoals>clean install</preparationGoals>
							<tagNameFormat>v@{project.version}</tagNameFormat>
							<!--  <remoteTagging>true</remoteTagging> -->
							
							<!-- Whether to use the release profile that adds sources and javadocs to the released artifact, if appropriate. If set to true, the release plugin sets 
							the property "performRelease" to true, which activates the profile "release-profile", which is inherited from the super pom. -->
				        	<useReleaseProfile>false</useReleaseProfile>
				        	<!-- L’option « autoVersionSubmodules » permet de n’avoir à saisir qu’un seul numéro de version qui sera appliqué de façon homogène à l’ensemble des sous-modules.  -->
							<autoVersionSubmodules>true</autoVersionSubmodules>
							<pushChanges>false</pushChanges>
							<!-- 
							It is possible to force some profiles to get enabled during release (for example to enable time-consuming tasks that are only relevant at release-time) 
							by setting a comma separated list of profiles names in the releaseProfiles parameter. The goals and profiles required to release the project can then be configured in the POM:
							 -->
							<releaseProfiles>release</releaseProfiles>
						</configuration>
					</execution>
				</executions>
			</plugin>
        </plugins>
    </build>
    
   <!--  
   git remote add gitHub https://github.com/otser/LabEjbSpringTransferApp.git
   
   	mvn release:clean
	mvn release:prepare  -Dusername=otser -Dpassword=zeki2260  
	mvn release:perform		
 -->
    	<scm>
    <url>https://github.com/otser/LabEjbSpringTransferApp.git</url>
    <connection>scm:git:https://github.com/otser/LabEjbSpringTransferApp.git</connection>
    <developerConnection>scm:git:https://github.com/otser/LabEjbSpringTransferApp.git</developerConnection>	
 	 </scm>
	
	<!-- Dans ce tag distributionManagement, indiquer à Maven où déposer les artifacts générés par la release. -->   
	<!-- Emplacement où seront générés les artefacts après la création d'une release -->
	 <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Local Releases Repo</name>
            <url>file:///D:/tools/mavenReleases/repository/repo</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Local Snapshots Repo</name>
            <url>file:///D:/tools/mavenReleases/repository/snapshotrepo</url>
        </snapshotRepository>
    </distributionManagement>
	
</project>
